
問題１
SELECT B.EPISODE_TITLE,A.VIEWS
FROM BROADCAST AS A INNER JOIN EPISODE AS B ON A.EPISODE_ID=B.EPISODE_ID
ORDER BY A.VIEWS DESC
LIMIT 3;

問題２
SELECT D.TITLE,COALESCE(C.SEASON_NUMBER,'単発のエピソードまたは単発の番組のためなし'),
COALESCE(B.EPISODE_NUMBER,'単発のエピソードまたは単発の番組のためなし'),B.EPISODE_TITLE,A.VIEWS
FROM BROADCAST AS A INNER JOIN EPISODE AS B on A.EPISODE_ID=B.EPISODE_ID
INNER JOIN SEASON AS C on B.SEASON_ID = C.SEASON_ID
INNER JOIN PROGRAM AS D  on C.PROGRAM_ID=D.PROGRAM_ID
INNER JOIN SLOT AS E on A.SLOT_ID=E.SLOT_ID
INNER JOIN CHANEL AS F on F.CHANEL_ID=E.CHANEL_ID
ORDER BY A.VIEWS DESC
LIMIT 3;
           
           

問題3
SELECT F.CHANEL_NAME,E.START_TIME,E.END_TIME,COALESCE(C.SEASON_NUMBER,'単発のエピソードまたは単発の番組のためなし'),
COALESCE(B.EPISODE_NUMBER,'単発のエピソードまたは単発の番組のためなし'),B.EPISODE_TITLE,B.EPISODE_DETAIL
FROM BROADCAST AS A INNER JOIN EPISODE AS B on A.EPISODE_ID=B.EPISODE_ID
INNER JOIN SEASON AS C on B.SEASON_ID = C.SEASON_ID
INNER JOIN PROGRAM AS D  on C.PROGRAM_ID=D.PROGRAM_ID
INNER JOIN SLOT AS E on A.SLOT_ID=E.SLOT_ID
INNER JOIN CHANEL AS F on F.CHANEL_ID=E.CHANEL_ID
WHERE CAST(E.START_TIME AS DATE) = CURDATE();


問題4
SELECT E.START_TIME,E.END_TIME,COALESCE(C.SEASON_NUMBER,'単発のエピソードのためなし'),
COALESCE(B.EPISODE_NUMBER,'単発のエピソードまたは単発の番組であるためなし'),B.EPISODE_TITLE,B.EPISODE_DETAIL
FROM BROADCAST AS A INNER JOIN EPISODE AS B on A.EPISODE_ID=B.EPISODE_ID
INNER JOIN SEASON AS C on B.SEASON_ID = C.SEASON_ID
INNER JOIN PROGRAM AS D  on C.PROGRAM_ID=D.PROGRAM_ID
INNER JOIN SLOT AS E on A.SLOT_ID=E.SLOT_ID
INNER JOIN CHANEL AS F on F.CHANEL_ID=E.CHANEL_ID
WHERE F.CHANEL_NAME='ドラマ1' AND CAST(E.START_TIME AS DATE) BETWEEN CURDATE() AND DATE_ADD(CURDATE(),INTERVAL 7 DAY);




問題5
SELECT D.TITLE,SUM(A.VIEWS) AS PROGRAMVIEWS
FROM BROADCAST AS A INNER JOIN EPISODE AS B on A.EPISODE_ID=B.EPISODE_ID
INNER JOIN SEASON AS C on B.SEASON_ID=C.SEASON_ID
INNER JOIN PROGRAM AS D  on D.PROGRAM_ID=C.PROGRAM_ID
INNER JOIN SLOT AS E on A.SLOT_ID=E.SLOT_ID
WHERE CAST(E.START_TIME AS DATE) BETWEEN DATE_SUB(CURDATE(),INTERVAL 7 DAY) AND  CURDATE()
GROUP BY D.PROGRAM_ID
ORDER BY PROGRAMVIEWS DESC
LIMIT 2;

問題6
WITH AVERAGEGEN_VIEWS AS (
SELECT AVERAGE_VIEWS.PROGRAM_ID,AVERAGE_VIEWS.TITLE,AVERAGE_VIEWS.AVGVIEWS,GENRE.GENRE_ID,GENRE.GENRE_NAME
FROM
(SELECT D.PROGRAM_ID,D.TITLE,AVG(A.VIEWS) AS AVGVIEWS
FROM BROADCAST AS A INNER JOIN EPISODE AS B on A.EPISODE_ID=B.EPISODE_ID
INNER JOIN SEASON AS C ON B.SEASON_ID=C.SEASON_ID
INNER JOIN PROGRAM AS D ON C.PROGRAM_ID=D.PROGRAM_ID
GROUP BY D.PROGRAM_ID) AS AVERAGE_VIEWS
INNER JOIN PROGRAM_GENRE ON AVERAGE_VIEWS.PROGRAM_ID=PROGRAM_GENRE.PROGRAM_ID
INNER JOIN GENRE ON PROGRAM_GENRE.GENRE_ID=GENRE.GENRE_ID)

SELECT E.GENRE_NAME,E.TITLE,F.JUNLE_MAXVIEW
FROM 
AVERAGEGEN_VIEWS AS E INNER JOIN (
SELECT GENRE_ID,MAX(SUMVIEWS) AS JUNLE_MAXVIEW
FROM AVERAGEGEN_VIEWS
GROUP BY GENRE_ID) AS F
ON F.GENRE_ID =E.GENRE_ID AND E.SUMVIEWS=F.JUNLE_MAXVIEW;

